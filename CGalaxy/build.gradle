buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.36', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = "0.1.0"
group = 'net.congueror.cgalaxy'
archivesBaseName = 'cgalaxy'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

minecraft {
    mappings channel: 'parchment', version: '2022.07.10-1.18.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        configureEach {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod',
                    archivesBaseName, '--all', '--output',
                    file('src/main/generated_resources'), '--existing',
                    file('src/main/resources/')

            mods {
                cgalaxy {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven {
        // Patchouli
        url 'https://maven.blamejared.com'
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }

    maven {
        //Curse maven
        url = "https://www.cursemaven.com"
    }

    maven {
        url 'https://modmaven.dev/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:1.18.2-40.1.68"

    compileOnly fg.deobf("mezz.jei:jei-1.18.2-common-api:10.1.0.223")
    compileOnly fg.deobf("mezz.jei:jei-1.18.2-forge-api:10.1.0.223")
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'

    implementation project(':CLib')
}

mixin {
    add sourceSets.main, "cgalaxy.mixin-refmap.json"
    config 'cgalaxy.mixin.json'
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "cgalaxy",
                "Specification-Vendor"    : "Congueror",
                "Specification-Version"   : "0.1.0",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "cgalaxy authors",
                //"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
                "TweakClass"              : "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder"              : 0,
                "MixinConfigs"            : "cgalaxy.mixin.json"
        ])
    }
}

publish.dependsOn('reobfJar')